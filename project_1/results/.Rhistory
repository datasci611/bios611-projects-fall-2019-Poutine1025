getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readr)
library(lubridate)
UMD=read_tsv("~/Documents/GitHub/bios611-projects-fall-2019-Poutine1025/project_1/data/UMD_Services_Provided_20190719.tsv")
metadata=read_tsv("~/Documents/GitHub/bios611-projects-fall-2019-Poutine1025/project_1/data/UMD_Services_Provided_metadata_20190719.tsv")
View(metadata)
View(UMD)
UMD=read_tsv("~/Documents/GitHub/bios611-projects-fall-2019-Poutine1025/project_1/data/UMD_Services_Provided_20190719.tsv")
metadata=read_tsv("~/Documents/GitHub/bios611-projects-fall-2019-Poutine1025/project_1/data/UMD_Services_Provided_metadata_20190719.tsv")
head(UMD)
UMD_selected=UMD %>%
select(`Date`, `Client File Number`, `Food Pounds`, `Clothing Items`, `Food Provided for`) %>%
rename(CFN=`Client File Number`, food=`Food Pounds`, clothing=`Clothing Items`, number=`Food Provided for`) %>%
drop_na()
head(UMD_selected)
View(UMD_selected)
#Food Pounds
ggplot(data = UMD_selected, aes(food)) +
geom_histogram() +
labs(x="Food Pounds", title = "Histogram of Food Pound")
#Clothing Items
ggplot(data = UMD_selected, aes(clothing)) +
geom_histogram() +
labs(x="Clothing Items", title = "Histogram of Clothing Items")
#Number of people in the family for which food was provided
ggplot(data = UMD_selected, aes(number)) +
geom_histogram() +
labs(x="Food Provided for", title = "Histogram of Food Provided for")
#Food Pounds
ggplot(data = UMD_selected, aes(food)) +
geom_histogram() +
labs(x="Food Pounds", title = "Histogram of Food Pound")
#Clothing Items
ggplot(data = UMD_selected, aes(clothing)) +
geom_histogram() +
labs(x="Clothing Items", title = "Histogram of Clothing Items")
#Number of people in the family for which food was provided
ggplot(data = UMD_selected, aes(number)) +
geom_histogram() +
labs(x="Food Provided for", title = "Histogram of Food Provided for")
UMD_selected=UMD_selected %>% filter((food<75) & (clothing<40) & (number<10))
#Food Pounds
ggplot(data = UMD_selected, aes(food)) +
theme_linedraw()+
geom_histogram() +
labs(x="Food Pounds", title = "Histogram of Food Pound without outliers")
#Clothing Items
ggplot(data = UMD_selected, aes(clothing)) +
theme_linedraw() +
geom_histogram() +
labs(x="Clothing Items", title = "Histogram of Clothing Items without outliers")
#Number of people in the family for which food was provided
ggplot(data = UMD_selected, aes(number)) +
theme_linedraw() +
geom_histogram() +
labs(x="Food Provided for", title = "Histogram of Food Provided for without outliers")
View(UMD_selected)
#number vs food
ggplot(data=UMD_selected,aes(x=number, y=food)) +
geom_point() +
geom_smooth() +
labs(x="Food Provided for",
y="Food Pounds",
title = "Food Pounds vs Food Provided for")
#number vs clothing
ggplot(data=UMD_selected,aes(x=number, y=clothing)) +
geom_point() +
geom_smooth() +
labs(x="Food Provided  for",
y="Clothing Items",
title = "Clothing Items vs Food Provided for")
#food vs clothing
ggplot(data=UMD_selected,aes(x=food, y=clothing)) +
geom_point() +
geom_smooth() +
labs(x="Food Pounds",
y="Clothing Items",
title="Food Pounds vs Clothing Items")
#subset1
UMD_subset1=UMD_selected %>%
group_by(CFN) %>%
summarize(number=round(mean(number)), food=sum(food), clothing=sum(clothing), freq=n()) %>%
mutate(food_mean=food/freq, clothing_mean=clothing/freq)
#number vs food_mean
ggplot(data=UMD_subset1,aes(x=number, y=food_mean)) +
theme_linedraw() +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(x="Food Provided for",
y="Average Food Pounds",
title = "Average Food Pounds vs Food Provided for")
#number vs food_mean
ggplot(data=UMD_subset1,aes(x=number, y=food_mean)) +
theme_linedraw() +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(x="Number of people per family per family",
y="Average Food Pounds",
title = "Average Food Pounds vs Number of people per family")
#number vs food_mean
ggplot(data=UMD_subset1,aes(x=number, y=food_mean)) +
theme_linedraw() +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(x="Number of people per family",
y="Average Food Pounds",
title = "Average Food Pounds vs Number of people per family")
#number vs food_mean
ggplot(data=UMD_subset1,aes(x=number, y=food_mean)) +
theme_linedraw() +
geom_boxplot() +
labs(x="Number of people per family",
y="Average Food Pounds",
title = "Average Food Pounds vs Number of people per family")
#food vs clothing
ggplot(data=UMD_subset1,aes(x=food, y=clothing)) +
theme_linedraw() +
geom_point() +
geom_smooth(aes(colour="gam")) +
geom_smooth(method = "lm", aes(colour="lm")) +
labs(x="Food Pounds",
y="Clothing Items",
title="Clothing Items vs Food Pounds")
#subset2
UMD_subset2=UMD_selected %>%
mutate(Date=as.Date(Date, format="%m/%d/%Y")) %>%
mutate(year=year(Date), month=month(Date), day=day(Date)) %>%
mutate(month=as.factor(month), day=as.factor(day)) %>%
filter((year>2004) & (year<2019))
#bar chart of year
ggplot(data=UMD_subset2,aes(year)) +
geom_bar(aes(fill=month)) +
labs(x="Year",
title = "Bar chart of Year")
ggplot(data = UMD_subset2, aes(x=month, y=clothing)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 1) +
labs(x="Month",
y="Clothing Items",
title = "Boxplot of Month and Clothing Items")
ggplot(data = UMD_subset2, aes(x=month, y=food)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 1) +
labs(x="Month",
y="Clothing Items",
title = "Boxplot of Month and Food Pounds")
#number vs food_mean
ggplot(data=UMD_subset1,aes(x=as.factor(number), y=food_mean)) +
theme_linedraw() +
geom_boxplot() +
labs(x="Number of people per family",
y="Average Food Pounds",
title = "Average Food Pounds vs Number of people per family")
#food vs clothing
ggplot(data=UMD_subset1,aes(x=food, y=clothing)) +
theme_linedraw() +
geom_point() +
#geom_smooth(aes(colour="gam")) +
geom_smooth(method = "lm", aes(colour="lm")) +
labs(x="Food Pounds",
y="Clothing Items",
title="Clothing Items vs Food Pounds")
#food vs clothing
ggplot(data=UMD_subset1,aes(x=food, y=clothing)) +
theme_linedraw() +
geom_point() +
#geom_smooth(aes(colour="gam")) +
geom_smooth(method = "lm") +
labs(x="Food Pounds",
y="Clothing Items",
title="Clothing Items vs Food Pounds")
View(UMD_subset2)
#bar chart of year
ggplot(data=UMD_subset2,aes(year)) +
geom_bar(aes(fill=month)) +
labs(x="Year",
title = "Bar chart of Year")
View(UMD_subset2)
range(UMD_subset2$year)
#bar chart of year
ggplot(data=UMD_subset2,aes(year)) +
geom_bar(aes(fill=month)) +
labs(x="Year",
title = "The amount of transactions from 2005-2018")
#bar chart of year
ggplot(data=UMD_subset2,aes(year)) +
geom_bar(aes(fill=month)) +
labs(x="Year",
title = "The number of transactions from 2005-2018")
#bar chart of year
ggplot(data=UMD_subset2,aes(year)) +
geom_bar(aes(fill=month)) +
labs(x="Year",
title = "The number of transactions from 2005 to 2018")
#bar chart of year
ggplot(data=UMD_subset2,aes(year)) +
geom_bar(aes(fill=month)) +
labs(x="Year",
title = "The number of transactions from 2005 to 2018")
#number vs food_mean
ggplot(data=UMD_subset1,aes(x=as.factor(number), y=food_mean)) +
theme_linedraw() +
geom_boxplot() +
labs(x="Number of people per family",
y="Average Food Pounds",
title = "Average Food Pounds of different sizes of family")
ggplot(data = UMD_subset2, aes(x=month, y=clothing)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 1) +
labs(x="Month",
y="Clothing Items",
title = "Number of clothing items of different months")
ggplot(data = UMD_subset2, aes(x=month, y=food)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 1) +
labs(x="Month",
y="Food Pounds",
title = "Amount of food of different months")
ggplot(data = UMD_subset2, aes(x=month, y=clothing)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 1) +
labs(x="Month",
y="Clothing Items",
title = "Number of clothing items for different months")
ggplot(data = UMD_subset2, aes(x=month, y=food)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 1) +
labs(x="Month",
y="Food Pounds",
title = "Amount of food for different months")
#subset3
UMD_subset3=UMD_subset2 %>%
group_by(year) %>%
summarize(food=sum(food), clothing=sum(clothing), number=sum(number), freq=n())
ggplot(data = UMD_subset3, aes(x=year, y=food)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x="Year",
y="Food Pounds",
title="Food Pounds vs Year from 2005 to 2018")
#subset3
UMD_subset3=UMD_subset2 %>%
group_by(year) %>%
summarize(food=sum(food), clothing=sum(clothing), number=sum(number), freq=n())
ggplot(data = UMD_subset3, aes(x=year, y=food)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x="Year",
y="Food Pounds",
title="Food Pounds from 2005 to 2018")
model_FoodvsYear=lm(food~year, data = UMD_subset3)
Food2019=predict(model_FoodvsYear, newdata = data.frame(year=2019))
print(paste("The predicted value of Food Pounds of 2019 is", Food2019))
model_FoodvsYear
10849*2019-21747332
View(UMD_subset3)
#number vs food_mean
ggplot(data=UMD_subset1,aes(x=as.factor(number), y=food_mean)) +
theme_linedraw() +
geom_boxplot() +
labs(x="Number of people per family",
y="Average Food Pounds",
title = "Average Food Pounds for different sizes of family")
View(UMD_subset1)
22*19/33/13
log(22*19/33/13)
OR=22*19/(33*13)
v=1/22+1/19+1/33+1/13
OR*exp(pnorm(0.975)*sqrt(v))
OR*exp(-pnorm(0.975)*sqrt(v))
OR^(pnorm(0.975)*sqrt(v))
OR^(-pnorm(0.975)*sqrt(v))
pnorm(0.975)
qnorm(0.975)
OR*exp(qnorm(0.975)*sqrt(v))
OR*exp(-qnorm(0.975)*sqrt(v))
OR=27*15/(7*18)
v=1/27+1/15+1/7+1/18
OR*exp(qnorm(0.975)*sqrt(v))
OR*exp(-qnorm(0.975)*sqrt(v))
v=1/27+1/15+1/7+1/18
OR*exp(qnorm(0.975)*sqrt(v))
OR*exp(-qnorm(0.975)*sqrt(v))
n11=22
n12=13
n21=33
n22=19
n=n11+n12+n21+n22
v=35*52*55*32/(n^2*(n-1))
m11=35*55/n
Q=(n11-m11)^2/v
Qp=n/(n-1)*Q
1-pchisq(0.003)
1-pchisq(0.003,1)
1-pchisq(0.0033,1)
n11=22
n12=13
n21=33
n22=19
n=n11+n12+n21+n22
v=35*52*55*32/(n^2*(n-1))
m11=35*55/n
n11b=27
n12b=7
n21b=18
n22b=15
nb=n11b+n12b+n21b+n22b
vb=34*33*45*22/(nb^2*(nb-1))
m11b=34*45/nb
QMH=(n11+n11b-m11-m11b)^2/(v+vb)
m11+m11b
80-(m11+m11b)
69-(m11+m11b)
Phi=(22*19/87+27*15/67)/(13*33/87+7*18/67)
77*7/51/31
exp(-0.9279)
exp(-0.9279+qnorm(0.975)*0.3336)
exp(-0.9279-qnorm(0.975)*0.3336)
exp(-0.7455)
exp(-0.7455-0.3306)
sqrt(2.7)
library(shiny); runApp('~/Documents/GitHub/datasci611/scripts/city_shiny_app.R')
runApp('~/Documents/GitHub/datasci611/scripts/city_shiny_app.R')
3exp(-1.96*0.8983)
3*exp(-1.96*0.8983)
exp(-qnorm(0.995)*0.4472)
exp(+qnorm(0.995)*0.4472)
0.333*exp(-qnorm(0.995)*0.4511)
0.333*exp(qnorm(0.995)*0.4511)
3*exp(qnorm(0.995)*0.4511)
3*exp(-qnorm(0.995)*0.4511)
exp(1.0986)
?%in%
